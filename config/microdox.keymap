// vim: set ft=c:
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define NUM  3
#define GAMING 4

&caps_word {
    continue-list = <UNDERSCORE BSPC>;
};

/{

    macros {
        mute_teamspeak: mute_teamspeak {
            wait-ms = <10>;
            label = "mute_teamspeak";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp GRAVE &kp N1>
            , <&macro_wait_time 10>
            , <&macro_release &kp GRAVE &kp N1>
            ;
        }; 

        deafen_teamspeak: deafen_teamspeak {
            wait-ms = <10>;
            label = "deafen_teamspeak";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
            = <&macro_press &kp GRAVE &kp N2>
            , <&macro_wait_time 10>
            , <&macro_release &kp GRAVE &kp N2>
            ;
        }; 
    };

    combos {
        compatible = "zmk,combos";
        combo_teamspeak_mute {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&mute_teamspeak>;
        };

        combo_teamspeak_deafen {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&deafen_teamspeak>;
        };

        combo_gaming_layer_switch {
            timeout-ms = <50>;
            key-positions = <0 3>;
            bindings = <&tog GAMING>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>; // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        phm: positional_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>; // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            global-quick-tap;
            hold-trigger-key-positions = <1 2 3 4 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | NAV | RET  |   | SPC | SYM  | ALT |

            bindings = <
                &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y               &kp U           &kp I           &kp O           &kp P
                &phm LGUI A     &phm LALT S     &phm LCTRL D    &phm LSHFT F    &kp G           &kp H               &hm RSHFT J     &hm RCTRL K     &hm RALT L      &hm RGUI SEMI
              //&hm  LGUI A     &hm  LALT S     &hm  LCTRL D    &hm  LSHFT F    &kp G           &kp H               &hm RSHFT J     &hm RCTRL K     &hm RALT L      &hm RGUI SEMI
                &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N               &kp M           &kp COMMA       &kp DOT         &kp FSLH
                                                &lt SYM LGUI    &mo NAV         &lt NUM RET     &mt RCTRL SPACE     &mo SYM         &kp RET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |      | ESC  |  ~   |     |   | TAB  | HOME |  UP  | END   | BKSP |
            // | BSPC | PGDN | PGUP | CTRL | NUM |   | LEFT | DOWN |  UP  | RIGHT | ENTR |
            // |      |      |      |      |     |   |  \   |      |      |       |  \   |
            //               |      |      |     |   |      |      |      |
            bindings = <
                &kp GRAVE    &none       &kp ESC        &kp TILDE       &none      &kp TAB      &kp HOME        &caps_word &kp END   &kp BSPC
                &kp BSPC     &kp PG_UP   &kp PG_DN      &kp DEL         &mo NUM    &kp LEFT     &kp DOWN        &kp UP     &kp RIGHT &kp RET
                &none        &none       &none          &none           &none      &kp BSLH     &none           &none      &none     &kp BSLH
                                         &none          &none           &none      &kp TAB      &none           &none 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };
   
        sym_layer {
            // -----------------------------------------------------------------------------------------
            // | 1/! | 2/@ | 3/# | 4/$ | 5/% |   | 6/^ | 7/& | 8/* | 9/( | 0/) |
            // |  ~  |  |  |  [  |  (  |  {  |   |  |  |  _  |  =  |  "  |  '  |
            // |  `  |  &  |  ]  |  )  |  }  |   |  -  |  +  |  -  |  |  |  \  |
            //             |  /  |  \  |SHFT |   |  _  |     |     |
            bindings = <
                &kp N1    &kp N2    &kp N3    &kp N4    &kp N5      &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   
//              &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp STAR  &kp MINUS&kp EQUAL
                &kp TILDE &kp PIPE  &kp LBKT  &kp LPAR  &kp LBRC    &kp PIPE  &kp UNDER &kp EQUAL &kp DQT  &kp SQT 
                &kp GRAVE &kp AMPS  &kp RBKT  &kp RPAR  &kp RBRC    &kp MINUS &kp PLUS  &kp MINUS &kp PIPE &kp BSLH
                                    &kp FSLH  &kp BSLH  &kp RSHFT   &kp UNDER &caps_word &trans 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        
        };

        // This layer is unreachable until "tri layer state" is sorted out.
        // Leaving it here for completeness.
        num_layer {
            // -----------------------------------------------------------------------------------------
            //  |      |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
            //  |      |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
            //  |      |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
            //               |     |     |     |   |  0  |  .  |     |
            bindings = <
                &bt BT_CLR      &bt BT_PRV      &bt BT_NXT      &none           &kp C_MUTE      &kp A         &kp N7  &kp N8 &kp N9 &kp D
                &kp C_PREV      &kp C_VOL_DN    &kp C_PP        &kp C_VOL_UP    &kp C_NEXT      &kp B         &kp N4  &kp N5 &kp N6 &kp E
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &kp C         &kp N1  &kp N2 &kp N3 &kp F
                                                &bootloader     &none           &none           &kp N0        &kp DOT &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

        gaming_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |   |  ^  |  &  |  *  |  (  |  )  |
            // | TAB |  Q  |  W  |  E  |  R  |   |  -  |  =  |  {  |  }  | "|" |
            // |     |  A  |  S  |  D  |  F  |   |  _  |  +  |  [  |  ]  |  \  |
            //             |  G  |  C  | SPC |   | L0  |     | ALT |
            bindings = <
                &kp ESC   &kp N1    &kp N2    &kp N3    &kp N4      &kp CARET &kp AMPS  &kp STAR        &kp LPAR &kp RPAR
                &kp TAB   &kp Q     &kp W     &kp E     &kp R       &kp DQT   &kp UNDER &kp EQUAL       &kp DQT  &kp SQT 
                &kp LSHFT &kp A     &kp S     &kp D     &kp F       &kp SQT   &kp PLUS  &kp MINUS       &kp PIPE &none   
                                    &kp G     &kp C     &kp SPACE   &to BASE  &none     &none   
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        
        };
    };
};
